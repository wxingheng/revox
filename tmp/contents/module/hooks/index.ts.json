{
    "body": [
        "import { useState } from 'react';",
        "import { TodoItem } from '../types';",
        "",
        "export const useModuleFlux = () => {",
        "  const [todos, setTodos] = useState<TodoItem[]>([",
        "    { id: 1, text: '创建 React Context 模块', completed: true },",
        "    { id: 2, text: '创建 components/SubComponent 组件', completed: true },",
        "    { id: 3, text: '创建 hooks/useModuleFlux 钩子', completed: true },",
        "    { id: 4, text: '创建 context/ModuleContext 上下文', completed: true },",
        "    { id: 5, text: '创建 types/ModuleTypes 类型', completed: true },",
        "    { id: 6, text: '创建 context/ModuleProvider 组件', completed: true },",
        "    { id: 7, text: '创建 hooks/useModuleContext 钩子', completed: true },",
        "    { id: 8, text: '将模块挂载到需要的地方', completed: false },",
        "  ]);",
        "",
        "  const addTodo = (text: string) => {",
        "    setTodos([...todos, { id: todos.length ? Math.max(...todos.map((t) => t.id)) + 1 : 1, text, completed: false }]);",
        "  };",
        "",
        "  const toggleTodo = (id: number) => {",
        "    setTodos(todos.map((todo) => (todo.id === id ? { ...todo, completed: !todo.completed } : todo)));",
        "  };",
        "",
        "  const removeTodo = (id: number) => {",
        "    setTodos(todos.filter((todo) => todo.id !== id));",
        "  };",
        "",
        "  return { todos, addTodo, toggleTodo, removeTodo };",
        "};"
    ],
    "file_name": "index.ts"
}
